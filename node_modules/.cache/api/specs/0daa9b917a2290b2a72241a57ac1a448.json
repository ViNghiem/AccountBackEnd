{
  "openapi": "3.0.2",
  "info": {
    "title": "Lexicon Schemas API",
    "description": "Use schemas to sync your data dictionary with Mixpanel. Schemas can be used to populate Lexicon and provide additional context for your data.",
    "contact": {
      "url": "https://mixpanel.com/get-support"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://{regionAndDomain}.com/api/app",
      "description": "Mixpanel's application API server.",
      "variables": {
        "regionAndDomain": {
          "default": "mixpanel",
          "enum": [
            "mixpanel",
            "eu.mixpanel"
          ],
          "description": "The server location to be used:\n  * `mixpanel` - The default (US) servers used for most projects\n  * `eu.mixpanel` - EU servers if you are enrolled in EU Data Residency\n"
        }
      }
    }
  ],
  "security": [
    {
      "ServiceAccount": []
    }
  ],
  "tags": [
    {
      "name": "Create Schemas",
      "description": "Operations to add schemas to a project"
    },
    {
      "name": "Delete Schemas",
      "description": "Remove a schema from a project"
    },
    {
      "name": "Retrieve Schemas",
      "description": "Get additional information about schemas"
    },
    {
      "name": "Update Schemas",
      "description": "Make changes to an existing Schema"
    }
  ],
  "paths": {
    "/projects/{projectId}/schemas": {
      "parameters": [
        {
          "in": "path",
          "name": "projectId",
          "schema": {
            "type": "integer"
          },
          "required": true,
          "description": "Your project id (eg: 12345)"
        }
      ],
      "get": {
        "operationId": "list-all-schemas-for-project",
        "tags": [
          "Retrieve Schemas"
        ],
        "summary": "List Schemas",
        "description": "List all schemas in a project",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "entityType": {
                            "type": "string",
                            "enum": [
                              "event",
                              "profile"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The entity name (eg: Added To Cart)"
                          },
                          "schemaJson": {
                            "type": "object",
                            "description": "The schema for the entity",
                            "properties": {
                              "properties": {
                                "type": "object",
                                "description": "The list of properties that should be included on an instance of this entity",
                                "additionalProperties": {
                                  "type": "object",
                                  "description": "The name and definition for a property. E.g. \"item_id\"",
                                  "required": [
                                    "type"
                                  ],
                                  "properties": {
                                    "type": {
                                      "enum": [
                                        "array",
                                        "boolean",
                                        "integer",
                                        "null",
                                        "number",
                                        "object",
                                        "string"
                                      ]
                                    },
                                    "description": {
                                      "type": "string"
                                    },
                                    "metadata": {
                                      "type": "object",
                                      "properties": {
                                        "com.mixpanel": {
                                          "type": "object",
                                          "description": "Metadata that is specific to Mixpanel",
                                          "properties": {
                                            "displayName": {
                                              "type": "string",
                                              "description": "If set, this name will be used in the Mixpanel UI instead of the entity name"
                                            },
                                            "hidden": {
                                              "type": "boolean",
                                              "description": "If true, this property will be hidden in the Mixpanel UI",
                                              "default": false
                                            },
                                            "dropped": {
                                              "type": "boolean",
                                              "description": "[Events only] If true, the property will be dropped at ingestion time.",
                                              "default": false
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "metadata": {
                                "type": "object",
                                "properties": {
                                  "com.mixpanel": {
                                    "type": "object",
                                    "description": "Metadata about this entity that is specific to Mixpanel",
                                    "properties": {
                                      "$source": {
                                        "type": "string",
                                        "description": "The source of this schema. Used by partners to identify themselves"
                                      },
                                      "displayName": {
                                        "type": "string",
                                        "description": "If set, this name will be used in the Mixpanel UI instead of the entity name"
                                      },
                                      "tags": {
                                        "type": "array",
                                        "description": "A list of tags to associate to this entity that can be used in the Mixpanel UI for filtering",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "hidden": {
                                        "type": "boolean",
                                        "description": "If true, this entity will be hidden in the Mixpanel UI",
                                        "default": false
                                      },
                                      "dropped": {
                                        "type": "boolean",
                                        "description": "[Events only] If true, the event will be dropped at ingestion time.",
                                        "default": false
                                      },
                                      "owners": {
                                        "type": "array",
                                        "description": "A list of people or teams that are responsible for this entity.",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "email": {
                                              "type": "string",
                                              "format": "email"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "name",
                          "entityType",
                          "schemaJson"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "ok"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Details about the error that occurred"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Details about the error that occurred"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "upload-schemas-for-project",
        "tags": [
          "Create Schemas"
        ],
        "summary": "Create/Replace Multiple",
        "description": "Upload schemas in bulk to the specified project. If a schema already exists for a specified entity, it will be replaced by the one you upload.\n[block:callout] {\n  \"type\": \"warning\",\n  \"title\": \"Metadata merging behavior\",\n  \"body\": \"If the new schema is missing `metadata` properties that are currently set in the existing schema for that entity, those properties will be merged into the new schema. For example, if your current schema has `{\\\"metadata\\\": {\\\"com.mixpanel\\\": {\\\"hidden\\\": true}}}` and you upload a new schema without \\\"hidden\\\", we will merge `\\\"hidden\\\": true` to your uploaded schema's metadata. If you want to remove that property, set the value to `null`.\"\n} [/block]\n[block:callout] {\n  \"type\": \"info\",\n  \"title\": \"Adding a schema for User Profiles\",\n  \"body\": \"To add a schema for your [User Profiles](https://help.mixpanel.com/hc/en-us/articles/115004501966-User-Profiles), specify the `entityType` as `profile` and the `name` as `$user`.\"\n} [/block]\n### Example POST Body\n```json\n{\n    \"entries\": [\n        {\n            \"entityType\": \"event\",\n            \"name\": \"Added To Cart\",\n            \"schemaJson\": {\n                \"$schema\": \"http://json-schema.org/draft-07/schema\",\n                \"description\": \"Tracked when a user adds an item to their cart.\",\n                \"required\": [\n                    \"item_name\",\n                    \"item_id\",\n                    \"item_price\"\n                ],\n                \"additionalProperties\": true,\n                \"metadata\": {\n                    \"com.mixpanel\": {\n                        \"tags\": [\n                            \"Shopping\",\n                            \"KPIs\"\n                        ],\n                        \"displayName\": \"Item Purchased\",\n                        \"hidden\": false,\n                        \"dropped\": false,\n                        \"owners\": [\n                            {\n                                \"name\": \"Pat Davis\",\n                                \"email\": \"pat.david@mixpanel.com\"\n                            }\n                        ]\n                    }\n                },\n                \"properties\": {\n                    \"item_name\": {\n                        \"type\": \"string\",\n                        \"description\": \"The name of the item\",\n                        \"examples\": [\n                            \"Blue Widget\"\n                        ],\n                        \"metadata\": {\n                          \"com.mixpanel\": {\n                            \"displayName\": \"Item Name\"\n                          }\n                        }\n                    },\n                    \"item_id\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The internal id of the item\",\n                        \"examples\": [\n                            12345\n                        ],\n                        \"metadata\": {\n                          \"com.mixpanel\": {\n                              \"displayName\": \"Item ID\"\n                          }\n                        }\n                    },\n                    \"item_price\": {\n                        \"type\": \"number\",\n                        \"description\": \"The current price of the item\",\n                        \"examples\": [\n                            25.35\n                        ],\n                        \"metadata\": {\n                          \"com.mixpanel\": {\n                            \"displayName\": \"Price\"\n                          }\n                        }\n                    },\n                    \"promo_id\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The id of any promo in progress for this item\",\n                        \"examples\": [\n                            82523,\n                            18382\n                        ],\n                        \"metadata\": {\n                          \"com.mixpanel\": {\n                            \"displayName\": \"Promo ID\"\n                          }\n                        }\n                    },\n                    \"date_added_to_catalog\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"The date this item was added to the store catalog\",\n                        \"examples\": [\n                            \"2015-03-05T15:25:23\"\n                        ],\n                        \"metadata\": {\n                          \"com.mixpanel\": {\n                            \"displayName\": \"Date Added\"\n                          }\n                        }\n                    }\n                }\n            }\n        }\n    ],\n    \"truncate\": false\n} ```",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "entries": {
                    "type": "array",
                    "description": "The list of schema entries to upload",
                    "items": {
                      "type": "object",
                      "properties": {
                        "entityType": {
                          "type": "string",
                          "enum": [
                            "event",
                            "profile"
                          ]
                        },
                        "name": {
                          "type": "string",
                          "description": "The entity name (eg: Added To Cart)"
                        },
                        "schemaJson": {
                          "type": "object",
                          "description": "The schema for the entity",
                          "properties": {
                            "properties": {
                              "type": "object",
                              "description": "The list of properties that should be included on an instance of this entity",
                              "additionalProperties": {
                                "type": "object",
                                "description": "The name and definition for a property. E.g. \"item_id\"",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "type": {
                                    "enum": [
                                      "array",
                                      "boolean",
                                      "integer",
                                      "null",
                                      "number",
                                      "object",
                                      "string"
                                    ]
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "metadata": {
                                    "type": "object",
                                    "properties": {
                                      "com.mixpanel": {
                                        "type": "object",
                                        "description": "Metadata that is specific to Mixpanel",
                                        "properties": {
                                          "displayName": {
                                            "type": "string",
                                            "description": "If set, this name will be used in the Mixpanel UI instead of the entity name"
                                          },
                                          "hidden": {
                                            "type": "boolean",
                                            "description": "If true, this property will be hidden in the Mixpanel UI",
                                            "default": false
                                          },
                                          "dropped": {
                                            "type": "boolean",
                                            "description": "[Events only] If true, the property will be dropped at ingestion time.",
                                            "default": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "metadata": {
                              "type": "object",
                              "properties": {
                                "com.mixpanel": {
                                  "type": "object",
                                  "description": "Metadata about this entity that is specific to Mixpanel",
                                  "properties": {
                                    "$source": {
                                      "type": "string",
                                      "description": "The source of this schema. Used by partners to identify themselves"
                                    },
                                    "displayName": {
                                      "type": "string",
                                      "description": "If set, this name will be used in the Mixpanel UI instead of the entity name"
                                    },
                                    "tags": {
                                      "type": "array",
                                      "description": "A list of tags to associate to this entity that can be used in the Mixpanel UI for filtering",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "hidden": {
                                      "type": "boolean",
                                      "description": "If true, this entity will be hidden in the Mixpanel UI",
                                      "default": false
                                    },
                                    "dropped": {
                                      "type": "boolean",
                                      "description": "[Events only] If true, the event will be dropped at ingestion time.",
                                      "default": false
                                    },
                                    "owners": {
                                      "type": "array",
                                      "description": "A list of people or teams that are responsible for this entity.",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string"
                                          },
                                          "email": {
                                            "type": "string",
                                            "format": "email"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "name",
                        "entityType",
                        "schemaJson"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "truncate": {
                    "type": "boolean",
                    "description": "If true, delete your entire data dictionary before inserting these entries. This is primarily useful if you want to upload a single file that represents your entire data dictionary.",
                    "default": false
                  }
                },
                "required": [
                  "entries"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "object",
                      "properties": {
                        "added": {
                          "type": "integer",
                          "description": "The number of entries that were inserted"
                        },
                        "deleted": {
                          "type": "integer",
                          "description": "The number of entries that were deleted (on applicable if `truncate: true`)"
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "ok"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Details about the error that occurred"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Details about the error that occurred"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-all-schemas-in-project",
        "tags": [
          "Delete Schemas"
        ],
        "summary": "Delete all Schemas",
        "description": "Delete all schemas in a project",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "object",
                      "properties": {
                        "delete_count": {
                          "type": "integer"
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "ok"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Details about the error that occurred"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Details about the error that occurred"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/schemas/{entityType}": {
      "parameters": [
        {
          "in": "path",
          "name": "projectId",
          "schema": {
            "type": "integer"
          },
          "required": true,
          "description": "Your project id (eg: 12345)"
        },
        {
          "in": "path",
          "name": "entityType",
          "schema": {
            "type": "string",
            "enum": [
              "event",
              "profile"
            ]
          },
          "required": true,
          "description": "The entity type (eg: event)"
        }
      ],
      "get": {
        "operationId": "list-schemas-for-entity",
        "tags": [
          "Retrieve Schemas"
        ],
        "summary": "List for Entity",
        "description": "Get all schemas for a specific entity type",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "entityType": {
                            "type": "string",
                            "enum": [
                              "event",
                              "profile"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The entity name (eg: Added To Cart)"
                          },
                          "schemaJson": {
                            "type": "object",
                            "description": "The schema for the entity",
                            "properties": {
                              "properties": {
                                "type": "object",
                                "description": "The list of properties that should be included on an instance of this entity",
                                "additionalProperties": {
                                  "type": "object",
                                  "description": "The name and definition for a property. E.g. \"item_id\"",
                                  "required": [
                                    "type"
                                  ],
                                  "properties": {
                                    "type": {
                                      "enum": [
                                        "array",
                                        "boolean",
                                        "integer",
                                        "null",
                                        "number",
                                        "object",
                                        "string"
                                      ]
                                    },
                                    "description": {
                                      "type": "string"
                                    },
                                    "metadata": {
                                      "type": "object",
                                      "properties": {
                                        "com.mixpanel": {
                                          "type": "object",
                                          "description": "Metadata that is specific to Mixpanel",
                                          "properties": {
                                            "displayName": {
                                              "type": "string",
                                              "description": "If set, this name will be used in the Mixpanel UI instead of the entity name"
                                            },
                                            "hidden": {
                                              "type": "boolean",
                                              "description": "If true, this property will be hidden in the Mixpanel UI",
                                              "default": false
                                            },
                                            "dropped": {
                                              "type": "boolean",
                                              "description": "[Events only] If true, the property will be dropped at ingestion time.",
                                              "default": false
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "metadata": {
                                "type": "object",
                                "properties": {
                                  "com.mixpanel": {
                                    "type": "object",
                                    "description": "Metadata about this entity that is specific to Mixpanel",
                                    "properties": {
                                      "$source": {
                                        "type": "string",
                                        "description": "The source of this schema. Used by partners to identify themselves"
                                      },
                                      "displayName": {
                                        "type": "string",
                                        "description": "If set, this name will be used in the Mixpanel UI instead of the entity name"
                                      },
                                      "tags": {
                                        "type": "array",
                                        "description": "A list of tags to associate to this entity that can be used in the Mixpanel UI for filtering",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "hidden": {
                                        "type": "boolean",
                                        "description": "If true, this entity will be hidden in the Mixpanel UI",
                                        "default": false
                                      },
                                      "dropped": {
                                        "type": "boolean",
                                        "description": "[Events only] If true, the event will be dropped at ingestion time.",
                                        "default": false
                                      },
                                      "owners": {
                                        "type": "array",
                                        "description": "A list of people or teams that are responsible for this entity.",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "email": {
                                              "type": "string",
                                              "format": "email"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "name",
                          "entityType",
                          "schemaJson"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "ok"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Details about the error that occurred"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Details about the error that occurred"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-schemas-for-entity",
        "tags": [
          "Delete Schemas"
        ],
        "summary": "Delete for Entity",
        "description": "Delete all schemas of a specific entity type",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "object",
                      "properties": {
                        "delete_count": {
                          "type": "integer"
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "ok"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Details about the error that occurred"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Details about the error that occurred"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/schemas/{entityType}/{name}": {
      "parameters": [
        {
          "in": "path",
          "name": "projectId",
          "schema": {
            "type": "integer"
          },
          "required": true,
          "description": "Your project id (eg: 12345)"
        },
        {
          "in": "path",
          "name": "entityType",
          "schema": {
            "type": "string",
            "enum": [
              "event",
              "profile"
            ]
          },
          "required": true,
          "description": "The entity type (eg: event)"
        },
        {
          "in": "path",
          "name": "name",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "The entity name (eg: Added To Cart)"
        }
      ],
      "get": {
        "operationId": "list-schemas-by-entity-and-name",
        "tags": [
          "Retrieve Schemas"
        ],
        "summary": "List for Entity and Name",
        "description": "Get the schema for a specific entity type and entity name",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "entityType": {
                            "type": "string",
                            "enum": [
                              "event",
                              "profile"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The entity name (eg: Added To Cart)"
                          },
                          "schemaJson": {
                            "type": "object",
                            "description": "The schema for the entity",
                            "properties": {
                              "properties": {
                                "type": "object",
                                "description": "The list of properties that should be included on an instance of this entity",
                                "additionalProperties": {
                                  "type": "object",
                                  "description": "The name and definition for a property. E.g. \"item_id\"",
                                  "required": [
                                    "type"
                                  ],
                                  "properties": {
                                    "type": {
                                      "enum": [
                                        "array",
                                        "boolean",
                                        "integer",
                                        "null",
                                        "number",
                                        "object",
                                        "string"
                                      ]
                                    },
                                    "description": {
                                      "type": "string"
                                    },
                                    "metadata": {
                                      "type": "object",
                                      "properties": {
                                        "com.mixpanel": {
                                          "type": "object",
                                          "description": "Metadata that is specific to Mixpanel",
                                          "properties": {
                                            "displayName": {
                                              "type": "string",
                                              "description": "If set, this name will be used in the Mixpanel UI instead of the entity name"
                                            },
                                            "hidden": {
                                              "type": "boolean",
                                              "description": "If true, this property will be hidden in the Mixpanel UI",
                                              "default": false
                                            },
                                            "dropped": {
                                              "type": "boolean",
                                              "description": "[Events only] If true, the property will be dropped at ingestion time.",
                                              "default": false
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "metadata": {
                                "type": "object",
                                "properties": {
                                  "com.mixpanel": {
                                    "type": "object",
                                    "description": "Metadata about this entity that is specific to Mixpanel",
                                    "properties": {
                                      "$source": {
                                        "type": "string",
                                        "description": "The source of this schema. Used by partners to identify themselves"
                                      },
                                      "displayName": {
                                        "type": "string",
                                        "description": "If set, this name will be used in the Mixpanel UI instead of the entity name"
                                      },
                                      "tags": {
                                        "type": "array",
                                        "description": "A list of tags to associate to this entity that can be used in the Mixpanel UI for filtering",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "hidden": {
                                        "type": "boolean",
                                        "description": "If true, this entity will be hidden in the Mixpanel UI",
                                        "default": false
                                      },
                                      "dropped": {
                                        "type": "boolean",
                                        "description": "[Events only] If true, the event will be dropped at ingestion time.",
                                        "default": false
                                      },
                                      "owners": {
                                        "type": "array",
                                        "description": "A list of people or teams that are responsible for this entity.",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "email": {
                                              "type": "string",
                                              "format": "email"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "name",
                          "entityType",
                          "schemaJson"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "ok"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Details about the error that occurred"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Details about the error that occurred"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-schema-by-entity-and-name",
        "tags": [
          "Delete Schemas"
        ],
        "summary": "Delete for Entity and Name",
        "description": "Delete schema for an entity type and entity name",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "object",
                      "properties": {
                        "delete_count": {
                          "type": "integer"
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "ok"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Details about the error that occurred"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Details about the error that occurred"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "upload-schema-by-entity-and-name",
        "summary": "Create/Replace One",
        "tags": [
          "Create Schemas"
        ],
        "description": "Upload a schema for a single entity. If a schema already exists for a specified entity, it will be replaced by the one you upload.\n[block:callout] {\n  \"type\": \"warning\",\n  \"title\": \"Metadata merging behavior\",\n  \"body\": \"If the new schema is missing `metadata` properties that are currently set in the existing schema for that entity, those properties will be merged into the new schema. For example, if your current schema has `{\\\"metadata\\\": {\\\"com.mixpanel\\\": {\\\"hidden\\\": true}}}` and you upload a new schema without \\\"hidden\\\", we will merge `\\\"hidden\\\": true` to your uploaded schema's metadata. If you want to remove that property, set the value to `null`.\"\n} [/block]\n[block:callout] {\n  \"type\": \"info\",\n  \"title\": \"Adding a schema for User Profiles\",\n  \"body\": \"To add a schema for your [User Profiles](https://help.mixpanel.com/hc/en-us/articles/115004501966-User-Profiles), specify the `entityType` as `profile` and the `name` as `$user`.\"\n} [/block]\n### Example POST Body\n```json\n{\n    \"$schema\": \"http://json-schema.org/draft-07/schema\",\n    \"description\": \"Tracked when a user adds an item to their cart.\",\n    \"required\": [\n        \"item_name\",\n        \"item_id\",\n        \"item_price\"\n    ],\n    \"additionalProperties\": true,\n    \"metadata\": {\n        \"com.mixpanel\": {\n            \"tags\": [\n                \"Shopping\",\n                \"KPIs\"\n            ],\n            \"displayName\": \"Item Purchased\",\n            \"hidden\": false,\n            \"dropped\": false,\n            \"owners\": [\n                {\n                    \"name\": \"Pat Davis\",\n                    \"email\": \"pat.david@mixpanel.com\"\n                }\n            ]\n        }\n    },\n    \"properties\": {\n        \"item_name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the item\",\n            \"examples\": [\n                \"Blue Widget\"\n            ],\n            \"metadata\": {\n              \"com.mixpanel\": {\n                \"displayName\": \"Item Name\"\n              }\n            }\n        },\n        \"item_id\": {\n            \"type\": \"integer\",\n            \"description\": \"The internal id of the item\",\n            \"examples\": [\n                12345\n            ],\n            \"metadata\": {\n              \"com.mixpanel\": {\n                \"displayName\": \"Item ID\"\n              }\n            }\n        },\n        \"item_price\": {\n            \"type\": \"number\",\n            \"description\": \"The current price of the item\",\n            \"examples\": [\n                25.35\n            ],\n            \"metadata\": {\n              \"com.mixpanel\": {\n                \"displayName\": \"Price\"\n              }\n            }\n        },\n        \"promo_id\": {\n            \"type\": \"integer\",\n            \"description\": \"The id of any promo in progress for this item\",\n            \"examples\": [\n                82523,\n                18382\n            ],\n            \"metadata\": {\n              \"com.mixpanel\": {\n                \"displayName\": \"Promo ID\"\n              }\n            }\n        },\n        \"date_added_to_catalog\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"The date this item was added to the store catalog\",\n            \"examples\": [\n                \"2015-03-05T15:25:23\"\n            ],\n            \"metadata\": {\n              \"com.mixpanel\": {\n                \"displayName\": \"Date Added\"\n              }\n            }\n        }\n    }\n} ```",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "The schema for the entity",
                "properties": {
                  "properties": {
                    "type": "object",
                    "description": "The list of properties that should be included on an instance of this entity",
                    "additionalProperties": {
                      "type": "object",
                      "description": "The name and definition for a property. E.g. \"item_id\"",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "enum": [
                            "array",
                            "boolean",
                            "integer",
                            "null",
                            "number",
                            "object",
                            "string"
                          ]
                        },
                        "description": {
                          "type": "string"
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "com.mixpanel": {
                              "type": "object",
                              "description": "Metadata that is specific to Mixpanel",
                              "properties": {
                                "displayName": {
                                  "type": "string",
                                  "description": "If set, this name will be used in the Mixpanel UI instead of the entity name"
                                },
                                "hidden": {
                                  "type": "boolean",
                                  "description": "If true, this property will be hidden in the Mixpanel UI",
                                  "default": false
                                },
                                "dropped": {
                                  "type": "boolean",
                                  "description": "[Events only] If true, the property will be dropped at ingestion time.",
                                  "default": false
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "metadata": {
                    "type": "object",
                    "properties": {
                      "com.mixpanel": {
                        "type": "object",
                        "description": "Metadata about this entity that is specific to Mixpanel",
                        "properties": {
                          "$source": {
                            "type": "string",
                            "description": "The source of this schema. Used by partners to identify themselves"
                          },
                          "displayName": {
                            "type": "string",
                            "description": "If set, this name will be used in the Mixpanel UI instead of the entity name"
                          },
                          "tags": {
                            "type": "array",
                            "description": "A list of tags to associate to this entity that can be used in the Mixpanel UI for filtering",
                            "items": {
                              "type": "string"
                            }
                          },
                          "hidden": {
                            "type": "boolean",
                            "description": "If true, this entity will be hidden in the Mixpanel UI",
                            "default": false
                          },
                          "dropped": {
                            "type": "boolean",
                            "description": "[Events only] If true, the event will be dropped at ingestion time.",
                            "default": false
                          },
                          "owners": {
                            "type": "array",
                            "description": "A list of people or teams that are responsible for this entity.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string",
                                  "format": "email"
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "ok"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Details about the error that occurred"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Details about the error that occurred"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Details about the error that occurred"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ServiceAccount": {
        "type": "http",
        "scheme": "basic",
        "description": "Service Account"
      },
      "ProjectSecret": {
        "type": "http",
        "scheme": "basic",
        "description": "Project Secret"
      }
    },
    "schemas": {
      "SchemaEntityType": {
        "type": "string",
        "enum": [
          "event",
          "profile"
        ]
      },
      "Schema": {
        "type": "object",
        "description": "The schema for the entity",
        "properties": {
          "properties": {
            "type": "object",
            "description": "The list of properties that should be included on an instance of this entity",
            "additionalProperties": {
              "type": "object",
              "description": "The name and definition for a property. E.g. \"item_id\"",
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "enum": [
                    "array",
                    "boolean",
                    "integer",
                    "null",
                    "number",
                    "object",
                    "string"
                  ]
                },
                "description": {
                  "type": "string"
                },
                "metadata": {
                  "type": "object",
                  "properties": {
                    "com.mixpanel": {
                      "type": "object",
                      "description": "Metadata that is specific to Mixpanel",
                      "properties": {
                        "displayName": {
                          "type": "string",
                          "description": "If set, this name will be used in the Mixpanel UI instead of the entity name"
                        },
                        "hidden": {
                          "type": "boolean",
                          "description": "If true, this property will be hidden in the Mixpanel UI",
                          "default": false
                        },
                        "dropped": {
                          "type": "boolean",
                          "description": "[Events only] If true, the property will be dropped at ingestion time.",
                          "default": false
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "metadata": {
            "type": "object",
            "properties": {
              "com.mixpanel": {
                "type": "object",
                "description": "Metadata about this entity that is specific to Mixpanel",
                "properties": {
                  "$source": {
                    "type": "string",
                    "description": "The source of this schema. Used by partners to identify themselves"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "If set, this name will be used in the Mixpanel UI instead of the entity name"
                  },
                  "tags": {
                    "type": "array",
                    "description": "A list of tags to associate to this entity that can be used in the Mixpanel UI for filtering",
                    "items": {
                      "type": "string"
                    }
                  },
                  "hidden": {
                    "type": "boolean",
                    "description": "If true, this entity will be hidden in the Mixpanel UI",
                    "default": false
                  },
                  "dropped": {
                    "type": "boolean",
                    "description": "[Events only] If true, the event will be dropped at ingestion time.",
                    "default": false
                  },
                  "owners": {
                    "type": "array",
                    "description": "A list of people or teams that are responsible for this entity.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string",
                          "format": "email"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        }
      },
      "SchemaEntry": {
        "type": "object",
        "properties": {
          "entityType": {
            "type": "string",
            "enum": [
              "event",
              "profile"
            ]
          },
          "name": {
            "type": "string",
            "description": "The entity name (eg: Added To Cart)"
          },
          "schemaJson": {
            "type": "object",
            "description": "The schema for the entity",
            "properties": {
              "properties": {
                "type": "object",
                "description": "The list of properties that should be included on an instance of this entity",
                "additionalProperties": {
                  "type": "object",
                  "description": "The name and definition for a property. E.g. \"item_id\"",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "enum": [
                        "array",
                        "boolean",
                        "integer",
                        "null",
                        "number",
                        "object",
                        "string"
                      ]
                    },
                    "description": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "com.mixpanel": {
                          "type": "object",
                          "description": "Metadata that is specific to Mixpanel",
                          "properties": {
                            "displayName": {
                              "type": "string",
                              "description": "If set, this name will be used in the Mixpanel UI instead of the entity name"
                            },
                            "hidden": {
                              "type": "boolean",
                              "description": "If true, this property will be hidden in the Mixpanel UI",
                              "default": false
                            },
                            "dropped": {
                              "type": "boolean",
                              "description": "[Events only] If true, the property will be dropped at ingestion time.",
                              "default": false
                            }
                          },
                          "additionalProperties": false
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "metadata": {
                "type": "object",
                "properties": {
                  "com.mixpanel": {
                    "type": "object",
                    "description": "Metadata about this entity that is specific to Mixpanel",
                    "properties": {
                      "$source": {
                        "type": "string",
                        "description": "The source of this schema. Used by partners to identify themselves"
                      },
                      "displayName": {
                        "type": "string",
                        "description": "If set, this name will be used in the Mixpanel UI instead of the entity name"
                      },
                      "tags": {
                        "type": "array",
                        "description": "A list of tags to associate to this entity that can be used in the Mixpanel UI for filtering",
                        "items": {
                          "type": "string"
                        }
                      },
                      "hidden": {
                        "type": "boolean",
                        "description": "If true, this entity will be hidden in the Mixpanel UI",
                        "default": false
                      },
                      "dropped": {
                        "type": "boolean",
                        "description": "[Events only] If true, the event will be dropped at ingestion time.",
                        "default": false
                      },
                      "owners": {
                        "type": "array",
                        "description": "A list of people or teams that are responsible for this entity.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string",
                              "format": "email"
                            }
                          },
                          "additionalProperties": false
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        },
        "required": [
          "name",
          "entityType",
          "schemaJson"
        ],
        "additionalProperties": false
      },
      "ListSchemasResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "entityType": {
                  "type": "string",
                  "enum": [
                    "event",
                    "profile"
                  ]
                },
                "name": {
                  "type": "string",
                  "description": "The entity name (eg: Added To Cart)"
                },
                "schemaJson": {
                  "type": "object",
                  "description": "The schema for the entity",
                  "properties": {
                    "properties": {
                      "type": "object",
                      "description": "The list of properties that should be included on an instance of this entity",
                      "additionalProperties": {
                        "type": "object",
                        "description": "The name and definition for a property. E.g. \"item_id\"",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "enum": [
                              "array",
                              "boolean",
                              "integer",
                              "null",
                              "number",
                              "object",
                              "string"
                            ]
                          },
                          "description": {
                            "type": "string"
                          },
                          "metadata": {
                            "type": "object",
                            "properties": {
                              "com.mixpanel": {
                                "type": "object",
                                "description": "Metadata that is specific to Mixpanel",
                                "properties": {
                                  "displayName": {
                                    "type": "string",
                                    "description": "If set, this name will be used in the Mixpanel UI instead of the entity name"
                                  },
                                  "hidden": {
                                    "type": "boolean",
                                    "description": "If true, this property will be hidden in the Mixpanel UI",
                                    "default": false
                                  },
                                  "dropped": {
                                    "type": "boolean",
                                    "description": "[Events only] If true, the property will be dropped at ingestion time.",
                                    "default": false
                                  }
                                },
                                "additionalProperties": false
                              }
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "com.mixpanel": {
                          "type": "object",
                          "description": "Metadata about this entity that is specific to Mixpanel",
                          "properties": {
                            "$source": {
                              "type": "string",
                              "description": "The source of this schema. Used by partners to identify themselves"
                            },
                            "displayName": {
                              "type": "string",
                              "description": "If set, this name will be used in the Mixpanel UI instead of the entity name"
                            },
                            "tags": {
                              "type": "array",
                              "description": "A list of tags to associate to this entity that can be used in the Mixpanel UI for filtering",
                              "items": {
                                "type": "string"
                              }
                            },
                            "hidden": {
                              "type": "boolean",
                              "description": "If true, this entity will be hidden in the Mixpanel UI",
                              "default": false
                            },
                            "dropped": {
                              "type": "boolean",
                              "description": "[Events only] If true, the event will be dropped at ingestion time.",
                              "default": false
                            },
                            "owners": {
                              "type": "array",
                              "description": "A list of people or teams that are responsible for this entity.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "email": {
                                    "type": "string",
                                    "format": "email"
                                  }
                                },
                                "additionalProperties": false
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "name",
                "entityType",
                "schemaJson"
              ],
              "additionalProperties": false
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "ok"
            ]
          }
        }
      },
      "BatchUploadSchemasResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "object",
            "properties": {
              "added": {
                "type": "integer",
                "description": "The number of entries that were inserted"
              },
              "deleted": {
                "type": "integer",
                "description": "The number of entries that were deleted (on applicable if `truncate: true`)"
              }
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "ok"
            ]
          }
        }
      },
      "DeleteSchemasResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "object",
            "properties": {
              "delete_count": {
                "type": "integer"
              }
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "ok"
            ]
          }
        }
      },
      "UploadSchemasResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "ok"
            ]
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Details about the error that occurred"
          },
          "status": {
            "type": "string",
            "enum": [
              "error"
            ]
          }
        }
      }
    },
    "parameters": {
      "schemaEntityType": {
        "in": "path",
        "name": "entityType",
        "schema": {
          "type": "string",
          "enum": [
            "event",
            "profile"
          ]
        },
        "required": true,
        "description": "The entity type (eg: event)"
      },
      "schemaEntityName": {
        "in": "path",
        "name": "name",
        "schema": {
          "type": "string"
        },
        "required": true,
        "description": "The entity name (eg: Added To Cart)"
      },
      "projectId": {
        "in": "path",
        "name": "projectId",
        "schema": {
          "type": "integer"
        },
        "required": true,
        "description": "Your project id (eg: 12345)"
      }
    },
    "responses": {
      "401Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Details about the error that occurred"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "403Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Details about the error that occurred"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "400BadRequest": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Details about the error that occurred"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "x-explorer-enabled": true,
  "x-proxy-enabled": true,
  "x-samples-enabled": true,
  "x-samples-languages": [
    "curl",
    "node",
    "ruby",
    "javascript",
    "python"
  ]
}